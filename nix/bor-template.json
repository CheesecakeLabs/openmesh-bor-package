{
  "name": "Bor (Polygon)",
  "desc": "Bor is the Ethereum-compatible client of the Polygon network.",
  "nixName": "polygon-bor",
  "specs": {
    "ram": 16384,
    "storage": 4194304
  },
  "tags": ["RPC", "Validator", "Blockchain", "Polygon"],
  "website": "https://polygon.technology/",
  "logo": "https://polygon.technology/favicon.ico",
  "options": [
    {
      "name": "enable",
      "desc": "Enable Polygon Bor Node.",
      "nixName": "enable",
      "type": "boolean",
      "value": "true"
    },
    {
      "name": "chain",
      "desc": "Name of the chain to sync ('amoy', 'mumbai', 'mainnet').",
      "nixName": "chain",
      "type": "string",
      "value": "mainnet"
    },
    {
      "name": "authrpc.addr",
      "desc": "Listening address for authenticated APIs.",
      "nixName": "authrpc.addr",
      "type": "string",
      "value": "localhost"
    },
    {
      "name": "authrpc.port",
      "desc": "Listening port for authenticated APIs.",
      "nixName": "authrpc.port",
      "type": "integer",
      "value": 8551
    },
    {
      "name": "authrpc.vhosts",
      "desc": "Comma separated list of virtual hostnames from which to accept requests.",
      "nixName": "authrpc.vhosts",
      "type": "string",
      "value": "localhost"
    },
    {
      "name": "http.addr",
      "desc": "HTTP-RPC server listening interface.",
      "nixName": "http.addr",
      "type": "string",
      "value": "localhost"
    },
    {
      "name": "http.api",
      "desc": "APIs offered over the HTTP-RPC interface.",
      "nixName": "http.api",
      "type": "string",
      "value": "eth,net,web3,txpool,bor"
    },
    {
      "name": "http.corsdomain",
      "desc": "Comma separated list of domains for cross-origin requests.",
      "nixName": "http.corsdomain",
      "type": "string",
      "value": "localhost"
    },
    {
      "name": "http.ep-requesttimeout",
      "desc": "Request Timeout for HTTP RPC execution pool.",
      "nixName": "http.ep-requesttimeout",
      "type": "string",
      "value": "0s"
    },
    {
      "name": "http.ep-size",
      "desc": "Maximum size of workers in HTTP RPC execution pool.",
      "nixName": "http.ep-size",
      "type": "integer",
      "value": 40
    },
    {
      "name": "http.port",
      "desc": "HTTP-RPC server listening port.",
      "nixName": "http.port",
      "type": "integer",
      "value": 8545
    },
    {
      "name": "http.rpcprefix",
      "desc": "HTTP path prefix for JSON-RPC.",
      "nixName": "http.rpcprefix",
      "type": "string",
      "value": ""
    },
    {
      "name": "http.vhosts",
      "desc": "Comma separated list of virtual hostnames for HTTP requests.",
      "nixName": "http.vhosts",
      "type": "string",
      "value": "localhost"
    },
    {
      "name": "ws.enable",
      "desc": "Enable the WS-RPC server.",
      "nixName": "ws.enable",
      "type": "boolean",
      "value": "false"
    },
    {
      "name": "ws.addr",
      "desc": "WS-RPC server listening interface.",
      "nixName": "ws.addr",
      "type": "string",
      "value": "localhost"
    },
    {
      "name": "ws.api",
      "desc": "APIs offered over the WS-RPC interface.",
      "nixName": "ws.api",
      "type": "string",
      "value": "net,web3"
    },
    {
      "name": "ws.ep-requesttimeout",
      "desc": "Request Timeout for WS RPC execution pool.",
      "nixName": "ws.ep-requesttimeout",
      "type": "string",
      "value": "0s"
    },
    {
      "name": "ws.ep-size",
      "desc": "Maximum size of workers in WS RPC execution pool.",
      "nixName": "ws.ep-size",
      "type": "integer",
      "value": 40
    },
    {
      "name": "ws.origins",
      "desc": "Origins for WebSocket requests.",
      "nixName": "ws.origins",
      "type": "string",
      "value": "localhost"
    },
    {
      "name": "ws.port",
      "desc": "WS-RPC server listening port.",
      "nixName": "ws.port",
      "type": "integer",
      "value": 8546
    },
    {
      "name": "grpc.addr",
      "desc": "Address for the GRPC API.",
      "nixName": "grpc.addr",
      "type": "string",
      "value": ":3131"
    },
    {
      "name": "bor.heimdall",
      "desc": "URL of Heimdall service.",
      "nixName": "bor.heimdall",
      "type": "string",
      "value": "http://0.0.0.0:1317"
    },
    {
      "name": "bor.runheimdall",
      "desc": "Run Heimdall service as a child process.",
      "nixName": "bor.runheimdall",
      "type": "boolean",
      "value": "false"
    },
    {
      "name": "bor.runheimdallargs",
      "desc": "Additional arguments for the Heimdall service.",
      "nixName": "bor.runheimdallargs",
      "type": "list of string",
      "value": "[]"
    },
    {
      "name": "bor.useheimdallapp",
      "desc": "Use Heimdall app for data fetching (requires bor.runheimdall).",
      "nixName": "bor.useheimdallapp",
      "type": "boolean",
      "value": "false"
    },
    {
      "name": "verbosity",
      "desc": "Logging verbosity level (5=trace, 4=debug, 3=info, 2=warn, 1=error, 0=crit).",
      "nixName": "verbosity",
      "type": "integer",
      "value": 3
    },
    {
      "name": "bootNodes",
      "desc": "List of bootnodes to connect to.",
      "nixName": "bootNodes",
      "type": "list of string",
      "value": [
        "enode://b8f1cc9c5d4403703fbf377116469667d2b1823c0daf16b7250aa576bacf399e42c3930ccfcb02c5df6879565a2b8931335565f0e8d3f8e72385ecf4a4bf160a@3.36.224.80:30303",
        "enode://8729e0c825f3d9cad382555f3e46dcff21af323e89025a0e6312df541f4a9e73abfa562d64906f5e59c51fe6f0501b3e61b07979606c56329c020ed739910759@54.194.245.5:30303"
      ]
    }
  ]
}
